<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: jQuery Mobile | Michael Minter]]></title>
  <link href="http://moorberry.net/blog/categories/jquery-mobile/atom.xml" rel="self"/>
  <link href="http://moorberry.net/"/>
  <updated>2013-02-11T15:20:30-06:00</updated>
  <id>http://moorberry.net/</id>
  <author>
    <name><![CDATA[Michael Minter]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Clicked Link Attributes in jQuery Mobile Events]]></title>
    <link href="http://moorberry.net/blog/link-attributes-jquery-mobile/"/>
    <updated>2013-02-06T18:13:00-06:00</updated>
    <id>http://moorberry.net/blog/link-attributes-jquery-mobile</id>
    <content type="html"><![CDATA[<p>So...are you tired of writing and rewriting (or commenting out) Javascript and want to handle your clicked link attributes inside of a <a href="http://jquerymobile.com/" target="_blank">jQuery Mobile</a> event? Here's how:</p>

<!--more-->


<p>``` perl
var params = {};</p>

<p>$('a').live('click', function(event)
{
  $.each($(event.target)[0].attributes, function(key, value){</p>

<pre><code>params[value.name] = value.value;
</code></pre>

<p>  });
});</p>

<p>$('div[data-role="page"]').live('pageshow',function(event, ui)
{
 console.log(params)
});
```</p>

<p>The click event has to be done separately and parsed before the <em>pageshow</em> event takes place.</p>

<p>Doing things this way you can also take full advantage of the rest of jQuery Mobile's special page responsive <a href="http://jquerymobile.com/test/docs/api/events.html" target="_blank">events</a> that happen throughtout the life of your application.</p>

<p>Please, if you have any ideas for an alternative method of injecting clicked link attributes into event functions, comment below.</p>
]]></content>
  </entry>
  
</feed>
